"""Rename Usergroup to Teamspace

Revision ID: 645ca75b23b4
Revises: 900205f44357
Create Date: 2024-08-26 19:07:36.297316

"""
from alembic import op
import sqlalchemy as sa
import fastapi_users_db_sqlalchemy


# revision identifiers, used by Alembic.
revision = "645ca75b23b4"
down_revision = "900205f44357"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_constraint(
        "token_rate_limit__user_group_user_group_id_fkey",
        "token_rate_limit__user_group",
        type_="foreignkey",
    )
    op.drop_constraint(
        "document_set__user_group_user_group_id_fkey",
        "document_set__user_group",
        type_="foreignkey",
    )
    op.drop_constraint(
        "user__user_group_user_group_id_fkey", "user__user_group", type_="foreignkey"
    )
    op.drop_constraint(
        "persona__user_group_user_group_id_fkey",
        "persona__user_group",
        type_="foreignkey",
    )
    op.drop_constraint(
        "user_group__connector_credential_pair_user_group_id_fkey",
        "user_group__connector_credential_pair",
        type_="foreignkey",
    )
    op.drop_constraint(
        "workspace__user_group_user_group_id_fkey",
        "workspace__user_group",
        type_="foreignkey",
    )

    op.drop_table("user_group__connector_credential_pair")
    op.drop_table("document_set__user_group")
    op.drop_table("persona__user_group")
    op.drop_table("workspace__user_group")
    op.drop_table("user__user_group")
    op.drop_table("user_group")
    op.drop_table("token_rate_limit__user_group")
    # op.drop_constraint("chat_message_id_key", "chat_message", type_="unique")

    op.create_table(
        "teamspace",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("is_up_to_date", sa.Boolean(), nullable=False),
        sa.Column("is_up_for_deletion", sa.Boolean(), nullable=False),
        sa.Column("workspace_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["workspace_id"],
            ["workspace.workspace_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "document_set__teamspace",
        sa.Column("document_set_id", sa.Integer(), nullable=False),
        sa.Column("teamspace_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["document_set_id"],
            ["document_set.id"],
        ),
        sa.ForeignKeyConstraint(
            ["teamspace_id"],
            ["teamspace.id"],
        ),
        sa.PrimaryKeyConstraint("document_set_id", "teamspace_id"),
    )
    op.create_table(
        "persona__teamspace",
        sa.Column("persona_id", sa.Integer(), nullable=False),
        sa.Column("teamspace_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["persona_id"],
            ["persona.id"],
        ),
        sa.ForeignKeyConstraint(
            ["teamspace_id"],
            ["teamspace.id"],
        ),
        sa.PrimaryKeyConstraint("persona_id", "teamspace_id"),
    )
    op.create_table(
        "token_rate_limit__teamspace",
        sa.Column("rate_limit_id", sa.Integer(), nullable=False),
        sa.Column("teamspace_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["rate_limit_id"],
            ["token_rate_limit.id"],
        ),
        sa.ForeignKeyConstraint(
            ["teamspace_id"],
            ["teamspace.id"],
        ),
        sa.PrimaryKeyConstraint("rate_limit_id", "teamspace_id"),
    )
    op.create_table(
        "user__teamspace",
        sa.Column("teamspace_id", sa.Integer(), nullable=False),
        sa.Column(
            "user_id",
            fastapi_users_db_sqlalchemy.generics.GUID(),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["teamspace_id"],
            ["teamspace.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("teamspace_id", "user_id"),
    )
    op.create_table(
        "workspace__teamspace",
        sa.Column("workspace_id", sa.Integer(), nullable=False),
        sa.Column("teamspace_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["teamspace_id"],
            ["teamspace.id"],
        ),
        sa.ForeignKeyConstraint(
            ["workspace_id"],
            ["workspace.workspace_id"],
        ),
        sa.PrimaryKeyConstraint("workspace_id", "teamspace_id"),
    )
    op.create_table(
        "teamspace__connector_credential_pair",
        sa.Column("teamspace_id", sa.Integer(), nullable=False),
        sa.Column("cc_pair_id", sa.Integer(), nullable=False),
        sa.Column("is_current", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["cc_pair_id"],
            ["connector_credential_pair.id"],
        ),
        sa.ForeignKeyConstraint(
            ["teamspace_id"],
            ["teamspace.id"],
        ),
        sa.PrimaryKeyConstraint("teamspace_id", "cc_pair_id", "is_current"),
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint("chat_message_id_key", "chat_message", ["id"])
    op.create_table(
        "token_rate_limit__user_group",
        sa.Column("rate_limit_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("user_group_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["rate_limit_id"],
            ["token_rate_limit.id"],
            name="token_rate_limit__user_group_rate_limit_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["user_group_id"],
            ["user_group.id"],
            name="token_rate_limit__user_group_user_group_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "rate_limit_id",
            "user_group_id",
            name="token_rate_limit__user_group_pkey",
        ),
    )
    op.create_table(
        "user_group",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('user_group_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("is_up_to_date", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "is_up_for_deletion",
            sa.BOOLEAN(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("workspace_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["workspace_id"],
            ["workspace.workspace_id"],
            name="user_group_workspace_id_fk",
        ),
        sa.PrimaryKeyConstraint("id", name="user_group_pkey"),
        sa.UniqueConstraint("name", name="user_group_name_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "user__user_group",
        sa.Column("user_group_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["user_group_id"],
            ["user_group.id"],
            name="user__user_group_user_group_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name="user__user_group_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint(
            "user_group_id", "user_id", name="user__user_group_pkey"
        ),
    )
    op.create_table(
        "workspace__user_group",
        sa.Column("workspace_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("user_group_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["user_group_id"],
            ["user_group.id"],
            name="workspace__user_group_user_group_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["workspace_id"],
            ["workspace.workspace_id"],
            name="workspace__user_group_workspace_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "workspace_id", "user_group_id", name="workspace__user_group_pkey"
        ),
    )
    op.create_table(
        "persona__user_group",
        sa.Column("persona_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("user_group_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["persona_id"],
            ["persona.id"],
            name="persona__user_group_persona_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["user_group_id"],
            ["user_group.id"],
            name="persona__user_group_user_group_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "persona_id", "user_group_id", name="persona__user_group_pkey"
        ),
    )
    op.create_table(
        "document_set__user_group",
        sa.Column(
            "document_set_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("user_group_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["document_set_id"],
            ["document_set.id"],
            name="document_set__user_group_document_set_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["user_group_id"],
            ["user_group.id"],
            name="document_set__user_group_user_group_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "document_set_id",
            "user_group_id",
            name="document_set__user_group_pkey",
        ),
    )
    op.create_table(
        "user_group__connector_credential_pair",
        sa.Column("user_group_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("cc_pair_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("is_current", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["cc_pair_id"],
            ["connector_credential_pair.id"],
            name="user_group__connector_credential_pair_cc_pair_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["user_group_id"],
            ["user_group.id"],
            name="user_group__connector_credential_pair_user_group_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "user_group_id",
            "cc_pair_id",
            "is_current",
            name="user_group__connector_credential_pair_pkey",
        ),
    )
    op.drop_table("teamspace__connector_credential_pair")
    op.drop_table("workspace__teamspace")
    op.drop_table("user__teamspace")
    op.drop_table("token_rate_limit__teamspace")
    op.drop_table("persona__teamspace")
    op.drop_table("document_set__teamspace")
    op.drop_table("teamspace")
    # ### end Alembic commands ###
